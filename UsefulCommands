#赋值语句后输出
s/^\([\t a-zA-Z0-9]*\)\<\(\w*\)\> =\(.*\)\n/\1\2 =\3\r  std::cout<<"\2 = "<<\2<<std::endl;\r/gc
#GetENtry前先判断
s/^\([\t ]*\)\<\(\w*\)\>->\(.*\)/\1if(\2) \2->\3/gc
#Access vector
s/^\([\t ]*\)std::vector<\(.*\)>[\t ]*\(\w*\);/\1\2 Get_\3( int i ) { return \3\[i\]; }/gc
#Access normal
s/^\([\t ]*\)\([a-zA-Z:]*\)[\t ]*\(\w*\);/\1\2 Get_\3() { return \3; }/gc
#读取root文件的一堆鸟事
##int m_XX;到int YY_XX;
s/^\([ \t]*\)\<\(\w*\)\> m_\(\w*\)\>;/\1\2 YY_\3;/gc
##vector<int> m_XX;到vector<int> *YY_XX = 0;
s/^\([ \t]*\)\(\<.*\>\)<\(.*\)> m_\(\w*\)\>;/\1\2<\3> *YY_\4 = 0;/gc
##blablabla m_XX;到TBranch *bYY_XX = 0;
s/^\([ \t]*\)\<.* m_\(\w*\)\>;/\1TBranch *bYY_\2 = 0;/gc
s/^\([ \t]*\)\<\(\w*\)_\(\w*\)\>/\1TBranch *b\2_\3 = 0;/gc
##blablabla m_XX;到m_TChain->SetBranchAddress("YY_XX", &YY_XX, &bYY_XX);
s/^\([ \t]*\)\<.* m_\(\w*\)\>;/\1m_TChain->SetBranchAddress("YY_\2", \&YY_\2, \&bYY_\2);/gc
s/^\([ \t]*\)\<\(\w*\)_\(\w*\)\>/\1m_TChain->SetBranchAddress("\2_\3", \&\2_\3, \&b\2_\3);/gc
##blablabla m_XX;到m_TChain->SetBranchAddress("YY_XX", &YY_XX);/gc
s/^\([ \t]*\)\<.* m_\(\w*\)\>;/\1m_TChain->SetBranchAddress("YY_\2", \&YY_\2);/gc
s/^\([ \t]*\)\<\(\w*\)\(\w*\)\>/\1m_TChain->SetBranchAddress("\2\3", \&\2\3);/gc
##blablabal m_XX;到if(bYY_XX) bYY_XX->GetENtry(tentry);
s/^\([ \t]*\)\<.* m_\(\w*\)\>;/\1if(bYY_\2) bYY_\2->GetEntry(tentry);/gc
s/^\([ \t]*\)\<\(\w*\)\>/\1if(b\2) b\2->GetEntry(tentry);/gc
##添加if判选
s/^\([ \t]*\)\<\(\w*\)\>->\(.*\)/\1if(\2) \2->\3/gc
## 4v
/\(.*\)0\([ \t]*\)360\([ \t]*\)\(\<\w*\>\)\(.*\)/\1180\2180\3\4\5\r\10\2180\3\4iv\5/gc
##2 -> 2.
/\/\([0-9][0-9]*\)\([^.]*$\)/\/\1\.\2/gc
##16进制
:r !xxd
